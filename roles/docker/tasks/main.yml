# Copyright (C)  2018 Matt Baumann
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

---
# Playbook installs docker on the server
# Update APT + Dependencies
# Docker install
# (Install administrative utilities, Ansible)
# Adding current user to docker prosix group
# Activating docker swarm mode

# prepare and dependencies
- name: Installs docker dependencies
  apt:
    name: "{{ item }}"
    state: latest
    update-cache: yes
    cache_valid_time: 3600
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common

  # Docker install
- name: Installs docker public key
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
    state: present

- name: Installs docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    filename: "docker-stable"

- name: Install docker
  apt:
    name: "docker-ce"
    state: present
    update_cache: yes
  ignore_errors: yes

- name: Start docker
  service:
    name: docker
    state: started
    enabled: yes

- name: Template demon config
  copy:
    src: "deamon.json"
    dest: "/etc/docker/deamon.json"
    owner: root
    group: root
    mode: 0600
  become: yes
  register: docker_daemon_config

- name: Restart docker to finish install
  service:
    name: docker
    state: restarted
    enabled: yes
  when: docker_daemon_config.changed

# Init docker swarm on single server
- name: Get docker info
  shell: docker info
  register: docker_info
  changed_when: false

- name: Init docker swarm mode
  shell: docker swarm init
  when: "docker_info.stdout.find('Swarm: inactive') != -1"

- name: Get docker swarm manager token
  shell: docker swarm join-token -q manager
  register: manager_token
